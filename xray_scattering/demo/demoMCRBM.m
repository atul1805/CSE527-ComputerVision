fprintf('\nHere we train a Mean-Covariance RBM on a dataset of\nwhitened 16x16 color image patches.\n\n');

load ('patchDataSmallRGB.mat','data','invXForm');

%  arch = [105 100 256 256]; % SHORTHAND [#Vis #hidMean #hidCov #Factors];

% REQUIRED ARCHITECTURE ARGUMENTS
arch = struct('nVis',105, ...
		      'nHidMean', 100, ...
              'nHidCov', 324, ...
              'nFactors', 324);
% GLOBAL OPTIONS
arch.opts = {'lRate0',.075, ...
			 'wPenalty', .01, ...
			 'batchSz',128, ...
			 'nEpoch', 150, ...
			 'displayEvery',100, ...
			 'beginAnneal', 1, ...
			 'beginWeightDecay',1, ...
			 'beginPUpdates', Inf, ...
			 'saveEvery', 1e6, ...
			 'useGPU', 0, ...
			 'pcd', 1, ...
			 'topoMask', createTopographyMatrix(arch.nHidCov,'2d-3x3','col'), ...
			 'visFun',@visMCRBMRGBPatchLearning}
	
mcr = mcrbm(arch)
mcr.auxVars.invXForm = single(invXForm); % FOR VISUALIZATIONS
mcr = mcr.train(data');  % DATA SHOULD BE [#VIS X #OBS]

% DISPLAY LEARNED FEATURES
close(gcf)
figure
subplottight(1,2,1,.15);
visPatchesRGB(mcr.C,invXForm);
title(sprintf('Learned Coviariance\nFeatures'))

subplottight(1,2,2,.15);
visPatchesRGB(mcr.W,invXForm);
title(sprintf('Learned Mean\nFeatures'))
